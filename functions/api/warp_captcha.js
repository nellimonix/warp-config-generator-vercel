import nacl from "tweetnacl";
import { Buffer } from "buffer";

// Импорт данных IP диапазонов
const ipRanges = {
  "discord": "103.224.0.0/16, 104.16.0.0/12, 108.136.0.0/14, 108.156.0.0/14, 13.224.0.0/12, 13.248.0.0/14, 13.32.0.0/12, 138.128.136.0/21, 143.204.0.0/16, 15.196.0.0/14, 15.204.0.0/16, 162.158.0.0/15, 162.210.192.0/21, 170.178.160.0/19, 172.64.0.0/13, 18.128.0.0/9, 18.64.0.0/10, 185.107.56.0/24, 188.114.96.0/22, 192.157.48.0/20, 199.115.112.0/21, 204.11.56.0/23, 207.244.64.0/18, 208.91.196.0/23, 216.137.32.0/19, 23.227.32.0/19, 3.128.0.0/9, 34.0.0.0/15, 34.2.0.0/15, 34.64.0.0/10, 35.192.0.0/12, 35.208.0.0/12, 37.1.216.0/21, 37.48.64.0/18, 45.134.10.0/24, 5.200.14.128/25, 51.81.0.0/16, 52.222.0.0/16, 52.84.0.0/14, 65.8.0.0/14, 66.22.192.0/18, 69.162.64.0/18, 70.32.0.0/20, 74.63.192.0/18, 76.223.0.0/17, 8.0.0.0/13, 8.32.0.0/11, 82.192.64.0/19",
  "youtube": "1.0.0.0/9, 1.192.0.0/10, 101.64.0.0/10, 103.0.0.0/14, 103.100.128.0/19, 103.101.0.0/18, 103.103.128.0/17, 103.105.0.0/16, 103.106.192.0/18, 103.107.128.0/17, 103.108.0.0/17, 103.111.128.0/17, 103.111.64.0/19, 103.112.48.0/21, 103.118.64.0/18, 103.119.0.0/16, 103.12.0.0/16, 103.120.0.0/16, 103.122.0.0/15, 103.124.0.0/16, 103.132.16.0/20, 103.132.64.0/18, 103.137.0.0/17, 103.139.128.0/17, 103.14.16.0/20, 103.140.0.0/16, 103.141.64.0/22, 103.144.0.0/16, 103.146.0.0/15, 103.148.0.0/14, 103.15.0.0/16, 103.152.0.0/13, 103.160.0.0/11, 103.17.128.0/17, 103.192.0.0/17, 103.193.0.0/17, 103.196.128.0/17, 103.199.0.0/18, 103.199.192.0/19, 103.199.224.0/21, 103.199.64.0/20, 103.20.0.0/16, 103.200.28.0/22, 103.200.32.0/19, 103.206.128.0/18, 103.21.0.0/17, 103.21.128.0/18, 103.211.104.0/21, 103.211.16.0/20, 103.214.160.0/20, 103.214.192.0/18, 103.218.0.0/16, 103.221.128.0/17, 103.225.176.0/20, 103.225.96.0/19, 103.226.128.0/18, 103.226.224.0/19, 103.228.130.0/23, 103.230.0.0/17, 103.232.128.0/19, 103.233.0.0/16, 103.234.0.0/17, 103.240.180.0/22, 103.242.0.0/19, 103.242.128.0/17, 103.243.0.0/18, 103.243.112.0/21, 103.246.240.0/21, 103.249.0.0/16, 103.25.128.0/17, 103.251.0.0/17, 103.251.192.0/18, 103.252.96.0/19, 103.26.208.0/20, 103.27.0.0/17, 103.28.0.0/15, 103.38.0.0/16, 103.39.128.0/17, 103.39.64.0/18, 103.40.0.0/16, 103.41.0.0/19, 103.42.0.0/16, 103.44.0.0/16, 103.52.0.0/16, 103.54.32.0/19, 103.56.0.0/17, 103.58.64.0/18, 103.59.128.0/17, 103.62.128.0/17, 103.66.64.0/18, 103.7.0.0/17, 103.70.0.0/16, 103.73.160.0/21, 103.73.64.0/18, 103.76.192.0/18, 103.80.0.0/17, 103.85.128.0/17, 103.85.64.0/18, 103.88.192.0/19, 103.89.0.0/16, 103.94.128.0/17, 103.97.0.0/18, 103.97.128.0/18, 104.16.0.0/12, 104.237.160.0/19, 104.244.40.0/21, 104.36.192.0/21, 105.0.0.0/8, 106.0.0.0/8, 107.181.160.0/19, 108.160.160.0/20, 108.177.0.0/17, 109.224.41.0/24, 109.239.184.0/21, 110.0.0.0/10, 110.128.0.0/10, 110.64.0.0/12, 110.93.128.0/17, 111.0.0.0/8, 112.0.0.0/8, 113.128.0.0/10, 113.192.0.0/13, 113.64.0.0/10, 114.0.0.0/9, 114.136.0.0/13, 114.250.63.0/24, 114.250.64.0/23, 114.250.67.0/24, 114.250.69.0/24, 114.250.70.0/24, 115.126.0.0/15, 115.164.0.0/15, 115.176.0.0/12, 115.64.0.0/11, 116.204.128.0/18, 116.206.0.0/18, 116.206.128.0/19, 116.212.128.0/19, 116.56.0.0/13, 116.64.0.0/10, 117.0.0.0/12, 117.128.0.0/9, 117.52.0.0/15, 117.55.224.0/19, 117.96.0.0/12, 118.107.180.0/22, 118.128.0.0/9, 118.68.0.0/14, 118.96.0.0/13, 119.0.0.0/13, 119.152.0.0/13, 119.16.0.0/12, 119.160.0.0/11, 119.32.0.0/11, 120.0.0.0/8, 121.64.0.0/12, 122.0.0.0/10, 122.144.0.0/14, 122.152.0.0/13, 122.192.0.0/11, 122.248.0.0/14, 122.252.0.0/15, 123.104.0.0/13, 123.128.0.0/10, 123.192.0.0/11, 123.240.0.0/13, 123.253.0.0/18, 124.0.0.0/9, 124.192.0.0/11, 124.248.0.0/14, 125.128.0.0/9, 125.64.0.0/10, 128.0.0.0/16, 128.121.0.0/16, 128.242.0.0/16, 128.75.0.0/16, 130.211.0.0/16, 137.59.16.0/20, 137.59.32.0/20, 137.59.64.0/18, 139.5.64.0/19, 14.102.128.0/18, 14.128.0.0/9, 140.213.0.0/16, 142.161.0.0/16, 142.250.0.0/15, 144.48.128.0/18, 145.236.72.0/23, 145.255.0.0/20, 148.163.0.0/17, 148.64.96.0/20, 148.69.0.0/16, 149.54.0.0/17, 150.107.0.0/18, 150.107.204.0/22, 150.129.0.0/21, 150.129.32.0/19, 150.129.96.0/19, 154.0.0.0/13, 154.64.0.0/10, 156.233.0.0/16, 157.20.0.0/16, 157.240.0.0/16, 157.8.0.0/14, 159.106.0.0/16, 159.138.0.0/16, 159.192.0.0/16, 159.65.0.0/16, 161.49.0.0/17, 162.125.0.0/16, 162.220.8.0/21, 162.252.180.0/22, 163.40.0.0/13, 163.53.64.0/18, 164.215.0.0/16, 165.165.0.0/16, 165.21.0.0/16, 166.70.0.0/16, 168.143.0.0/16, 170.238.0.0/16, 171.128.0.0/9, 171.96.0.0/11, 172.217.0.0/16, 172.253.0.0/16, 172.64.0.0/13, 173.194.0.0/16, 173.208.128.0/17, 173.231.0.0/18, 173.234.32.0/19, 173.236.128.0/17, 173.244.192.0/19, 173.252.192.0/18, 173.252.64.0/18, 173.255.192.0/18, 174.36.0.0/15, 175.104.0.0/14, 175.112.0.0/12, 175.96.0.0/13, 176.28.128.0/17, 177.64.0.0/12, 178.151.230.0/24, 178.176.156.0/24, 178.22.168.0/24, 179.32.0.0/12, 179.60.0.0/16, 179.64.0.0/10, 180.149.224.0/19, 180.149.48.0/20, 180.149.64.0/18, 180.160.0.0/11, 180.192.0.0/11, 181.0.0.0/11, 181.208.0.0/14, 182.0.0.0/9, 182.176.0.0/12, 182.192.0.0/10, 183.0.0.0/8, 184.150.0.0/17, 184.150.128.0/18, 184.172.0.0/15, 184.72.0.0/15, 185.100.209.0/24, 185.158.208.0/23, 185.192.248.0/26, 185.192.249.0/24, 185.192.251.192/26, 185.23.124.0/23, 185.45.4.0/22, 185.48.9.0/24, 185.5.161.0/26, 185.60.216.0/22, 185.61.94.0/23, 186.128.0.0/9, 187.0.0.0/11, 187.128.0.0/9, 188.114.96.0/22, 188.120.127.0/24, 188.21.9.0/24, 188.43.61.0/24, 188.43.68.0/23, 188.93.174.0/24, 189.128.0.0/9, 190.0.0.0/10, 190.224.0.0/11, 192.133.76.0/22, 192.135.88.0/21, 192.178.0.0/15, 192.248.0.0/17, 192.86.0.0/24, 193.109.164.0/22, 193.126.242.0/26, 194.78.0.0/24, 194.9.24.0/24, 194.9.25.0/24, 195.12.177.0/26, 195.176.255.192/26, 195.187.0.0/16, 195.87.177.0/24, 195.95.178.0/24, 196.1.128.0/17, 196.128.0.0/9, 196.32.0.0/11, 197.0.0.0/8, 198.27.64.0/18, 198.44.160.0/19, 199.16.156.0/22, 199.193.112.0/21, 199.59.148.0/22, 199.85.224.0/21, 199.96.56.0/21, 200.96.0.0/11, 201.0.0.0/11, 201.160.0.0/11, 201.48.0.0/16, 202.128.0.0/14, 202.136.0.0/13, 202.148.0.0/14, 202.152.0.0/13, 202.160.0.0/15, 202.163.0.0/16, 202.165.0.0/16, 202.166.0.0/15, 202.168.0.0/15, 202.182.0.0/15, 202.184.0.0/13, 202.24.0.0/13, 202.39.0.0/16, 202.51.64.0/21, 202.51.72.0/22, 202.51.79.0/24, 202.52.0.0/14, 202.60.0.0/16, 202.64.0.0/14, 202.68.0.0/15, 202.70.0.0/16, 202.72.0.0/14, 202.79.0.0/17, 202.80.0.0/13, 202.88.0.0/14, 202.93.0.0/16, 203.101.0.0/16, 203.110.0.0/15, 203.112.0.0/12, 203.128.0.0/12, 203.144.0.0/13, 203.162.0.0/15, 203.167.0.0/16, 203.170.0.0/16, 203.171.128.0/17, 203.176.0.0/13, 203.184.0.0/14, 203.189.0.0/17, 203.192.0.0/10, 203.64.0.0/13, 203.76.0.0/15, 203.78.0.0/17, 203.80.0.0/13, 204.145.2.0/23, 204.79.196.0/23, 204.84.0.0/15, 205.186.128.0/18, 206.144.0.0/14, 207.231.168.0/21, 208.0.0.0/11, 208.101.0.0/18, 208.110.64.0/19, 208.187.128.0/17, 208.192.0.0/10, 208.43.0.0/16, 208.54.0.0/17, 208.77.40.0/21, 208.84.220.0/22, 208.98.128.0/18, 209.115.128.0/17, 209.141.112.0/20, 209.145.96.0/19, 209.146.0.0/17, 209.148.128.0/17, 209.191.192.0/19, 209.52.0.0/15, 209.85.128.0/17, 209.91.64.0/18, 209.95.32.0/19, 210.0.0.0/7, 212.106.200.0/21, 212.113.52.0/24, 212.156.0.0/16, 212.188.10.0/24, 212.188.34.0/24, 212.188.35.0/24, 212.188.37.0/24, 212.188.49.0/24, 212.20.18.0/24, 212.39.86.0/24, 212.43.1.0/24, 212.43.8.0/21, 212.55.184.0/22, 212.90.48.0/20, 213.152.1.64/27, 213.202.0.0/21, 213.55.64.0/18, 213.59.192.0/18, 216.105.64.0/20, 216.123.192.0/18, 216.19.176.0/20, 216.239.32.0/19, 216.58.192.0/19, 217.119.118.64/26, 217.130.7.0/25, 217.175.200.64/26, 217.197.248.0/23, 217.73.128.0/22, 218.0.0.0/7, 220.0.0.0/9, 220.160.0.0/11, 221.0.0.0/8, 222.0.0.0/8, 223.128.0.0/9, 223.25.128.0/17, 223.27.128.0/17, 223.32.0.0/11, 23.142.48.0/24, 23.152.160.0/24, 23.192.0.0/11, 23.224.0.0/15, 23.234.0.0/18, 23.96.0.0/13, 24.244.0.0/18, 27.112.0.0/13, 27.128.0.0/9, 27.2.0.0/15, 27.64.0.0/11, 27.96.0.0/12, 31.13.64.0/18, 31.145.0.0/16, 34.64.0.0/10, 36.0.0.0/9, 37.152.0.0/22, 38.0.0.0/7, 4.0.0.0/9, 40.136.0.0/15, 41.0.0.0/8, 42.0.0.0/8, 43.224.0.0/16, 43.226.16.0/20, 43.228.0.0/16, 43.230.128.0/21, 43.245.128.0/20, 43.245.144.0/21, 43.245.192.0/20, 43.245.96.0/20, 43.250.0.0/16, 43.252.16.0/21, 45.112.128.0/18, 45.113.128.0/18, 45.114.8.0/21, 45.116.192.0/19, 45.116.224.0/20, 45.118.240.0/21, 45.121.128.0/17, 45.124.0.0/18, 45.127.0.0/17, 45.14.108.0/22, 45.249.0.0/16, 45.253.0.0/16, 45.54.0.0/17, 45.64.0.0/16, 45.76.0.0/15, 46.134.192.0/18, 46.32.101.0/24, 46.36.112.0/20, 46.61.0.0/16, 47.88.0.0/14, 49.192.0.0/11, 49.224.0.0/13, 49.32.0.0/11, 5.195.0.0/16, 5.21.228.0/22, 5.30.0.0/15, 5.32.175.0/24, 50.0.0.0/15, 50.117.0.0/17, 50.128.0.0/9, 50.22.0.0/15, 50.87.0.0/16, 51.39.0.0/16, 52.0.0.0/10, 52.160.0.0/11, 54.144.0.0/12, 54.224.0.0/11, 54.64.0.0/11, 58.0.0.0/10, 58.112.0.0/12, 58.128.0.0/9, 58.64.0.0/11, 59.0.0.0/9, 59.152.0.0/18, 59.152.96.0/20, 59.153.128.0/17, 59.160.0.0/11, 61.0.0.0/13, 61.128.0.0/9, 61.16.0.0/12, 61.32.0.0/11, 61.64.0.0/10, 62.0.0.0/16, 62.149.96.0/20, 62.212.240.0/20, 62.231.75.0/24, 63.64.0.0/10, 64.13.192.0/18, 64.15.112.0/20, 64.233.160.0/19, 64.4.224.0/20, 64.53.128.0/17, 65.192.0.0/11, 65.240.0.0/13, 65.49.0.0/17, 66.102.0.0/20, 66.112.176.0/20, 66.220.144.0/20, 66.248.254.0/24, 66.58.128.0/17, 66.96.224.0/19, 67.15.0.0/16, 67.204.128.0/18, 67.228.0.0/16, 67.230.160.0/19, 67.50.0.0/17, 69.162.128.0/18, 69.171.224.0/19, 69.197.128.0/18, 69.30.0.0/18, 69.48.216.0/21, 69.50.192.0/19, 69.51.64.0/18, 69.59.192.0/19, 69.63.176.0/20, 72.19.32.0/19, 72.234.0.0/15, 74.125.0.0/16, 74.86.0.0/16, 75.126.0.0/16, 75.98.144.0/20, 77.120.12.0/22, 77.37.252.0/23, 79.133.76.0/23, 80.253.29.0/24, 80.77.172.0/22, 80.87.198.0/23, 80.87.64.0/19, 80.97.192.0/18, 81.130.96.0/20, 81.192.0.0/16, 81.200.2.0/24, 81.23.16.0/21, 81.23.24.0/21, 81.27.242.128/27, 82.114.162.0/23, 82.147.133.128/26, 82.148.96.0/19, 82.76.231.64/26, 83.219.145.0/24, 83.224.64.0/20, 84.15.64.0/24, 84.235.64.0/22, 84.235.77.0/24, 84.235.78.0/24, 85.112.112.0/20, 86.120.7.128/27, 86.62.126.64/27, 87.245.192.0/20, 87.245.216.0/21, 88.191.249.0/24, 88.201.0.0/17, 89.27.128.0/17, 90.180.0.0/14, 90.200.0.0/14, 91.185.2.0/24, 92.80.0.0/13, 93.123.23.0/24, 93.179.96.0/21, 94.142.38.0/24, 94.203.108.0/23, 94.24.192.0/18, 94.31.189.0/24, 94.96.0.0/14, 95.142.107.0/27, 95.167.73.0/24, 95.168.192.0/19, 95.59.170.0/24, 95.66.0.0/18, 96.30.64.0/18, 96.44.128.0/18, 96.63.128.0/19, 96.9.128.0/19, 98.159.96.0/20",
  "telegram": "100.24.0.0/13, 104.16.0.0/12, 108.177.0.0/17, 142.250.0.0/15, 146.75.0.0/16, 149.154.160.0/20, 151.101.0.0/16, 170.149.0.0/16, 172.217.0.0/16, 172.64.0.0/13, 173.194.0.0/16, 174.143.0.0/16, 178.128.240.0/20, 18.128.0.0/9, 185.76.151.0/24, 188.166.0.0/17, 199.232.0.0/16, 204.212.0.0/14, 209.85.128.0/17, 209.97.0.0/18, 213.180.193.0/24, 216.58.192.0/19, 34.64.0.0/10, 35.184.0.0/13, 35.224.0.0/12, 35.240.0.0/13, 40.96.0.0/12, 50.128.0.0/9, 52.96.0.0/12, 64.233.160.0/19, 66.151.176.0/20, 74.125.0.0/16, 8.0.0.0/13, 8.32.0.0/11, 91.105.192.0/23, 91.108.12.0/22, 91.108.16.0/22, 91.108.20.0/22, 91.108.4.0/22, 91.108.56.0/22, 91.108.8.0/22, 92.204.208.0/20, 95.161.64.0/20",
  "whatsapp": "1.0.0.0/9, 101.48.0.0/13, 101.64.0.0/10, 102.0.0.0/8, 103.0.0.0/14, 103.101.128.0/17, 103.119.0.0/16, 103.120.0.0/16, 103.131.0.0/16, 103.156.0.0/14, 103.160.0.0/11, 103.199.64.0/20, 103.21.128.0/18, 103.226.128.0/18, 103.232.128.0/19, 103.234.0.0/17, 103.240.0.0/17, 103.41.0.0/19, 103.63.64.0/18, 103.73.64.0/18, 103.8.0.0/14, 103.97.128.0/18, 105.0.0.0/8, 106.0.0.0/8, 109.173.136.0/21, 109.226.16.128/25, 109.75.52.0/23, 110.0.0.0/11, 110.160.0.0/13, 110.40.0.0/13, 110.93.128.0/17, 111.80.0.0/13, 111.96.0.0/11, 112.0.0.0/8, 113.128.0.0/10, 114.0.0.0/10, 114.136.0.0/13, 114.96.0.0/11, 115.164.0.0/15, 115.64.0.0/11, 116.206.0.0/18, 116.64.0.0/10, 117.128.0.0/9, 117.52.0.0/15, 118.96.0.0/13, 119.16.0.0/12, 119.32.0.0/11, 120.0.0.0/8, 122.0.0.0/10, 122.152.0.0/13, 123.104.0.0/13, 123.128.0.0/10, 123.192.0.0/11, 124.0.0.0/9, 124.208.0.0/12, 128.200.0.0/15, 129.0.0.0/16, 129.134.0.0/16, 131.0.0.0/16, 131.108.0.0/16, 131.161.0.0/16, 131.221.0.0/16, 131.255.0.0/16, 132.245.0.0/16, 132.255.0.0/16, 134.19.0.0/16, 137.59.64.0/18, 138.0.0.0/16, 138.118.128.0/17, 138.121.0.0/16, 138.185.0.0/16, 138.186.0.0/16, 138.219.0.0/16, 138.36.0.0/16, 138.59.0.0/16, 138.97.0.0/16, 138.99.0.0/16, 139.5.32.0/19, 139.5.64.0/19, 140.213.0.0/16, 141.0.0.0/8, 143.0.0.0/16, 143.208.0.0/16, 143.255.0.0/16, 145.255.92.0/22, 149.255.0.0/16, 149.62.0.0/16, 15.196.0.0/14, 150.129.128.0/17, 151.0.0.0/8, 152.255.0.0/16, 154.64.0.0/10, 156.0.0.0/16, 156.38.0.0/16, 157.240.0.0/16, 159.146.0.0/16, 159.224.0.0/16, 160.113.0.0/16, 160.202.144.0/21, 161.0.0.0/16, 162.221.212.0/22, 163.70.128.0/17, 165.169.0.0/16, 165.56.0.0/16, 167.142.0.0/16, 168.0.0.0/16, 168.121.0.0/16, 168.181.0.0/16, 168.194.0.0/16, 168.196.0.0/16, 168.197.0.0/16, 168.90.0.0/16, 169.239.0.0/16, 170.150.0.0/16, 170.231.0.0/16, 170.233.0.0/16, 170.238.0.0/16, 170.245.0.0/19, 170.246.128.0/17, 170.52.48.0/21, 170.78.0.0/16, 170.80.0.0/16, 170.83.0.0/16, 170.84.128.0/18, 170.84.192.0/19, 171.128.0.0/9, 171.96.0.0/11, 172.93.16.0/20, 175.0.0.0/10, 175.96.0.0/13, 176.240.128.0/17, 176.28.128.0/17, 176.58.72.0/24, 177.10.0.0/15, 177.128.0.0/10, 177.16.0.0/12, 177.192.0.0/12, 177.220.0.0/15, 177.223.0.0/16, 177.224.0.0/11, 177.32.0.0/11, 177.64.0.0/12, 177.80.0.0/13, 177.88.0.0/14, 177.92.0.0/16, 177.96.0.0/11, 178.88.114.128/26, 179.0.0.0/11, 179.128.0.0/11, 179.176.0.0/13, 179.184.0.0/14, 179.189.0.0/17, 179.192.0.0/10, 179.32.0.0/12, 179.48.0.0/13, 179.60.0.0/16, 179.62.0.0/15, 179.64.0.0/10, 18.128.0.0/9, 180.149.48.0/20, 180.192.0.0/11, 181.0.0.0/11, 181.116.0.0/14, 181.128.0.0/10, 181.32.0.0/13, 181.64.0.0/11, 182.0.0.0/9, 182.176.0.0/12, 182.192.0.0/10, 183.0.0.0/8, 185.11.11.0/24, 185.143.124.0/22, 185.173.60.0/22, 185.191.52.0/22, 185.2.96.0/22, 185.27.106.0/24, 185.47.188.0/22, 185.48.240.0/24, 185.54.255.128/26, 185.58.68.0/24, 185.60.216.0/22, 185.76.178.0/24, 185.78.131.128/26, 185.78.131.64/26, 185.81.140.0/23, 185.81.33.0/24, 185.82.96.0/24, 185.85.152.0/23, 185.89.218.0/23, 186.0.0.0/15, 186.128.0.0/9, 186.16.0.0/12, 186.2.128.0/19, 186.32.0.0/11, 186.4.0.0/14, 186.64.0.0/10, 186.8.0.0/13, 187.0.0.0/11, 187.128.0.0/9, 187.32.0.0/16, 187.36.0.0/14, 187.48.0.0/12, 187.64.0.0/10, 188.0.149.0/24, 188.137.0.0/17, 188.247.240.0/21, 188.64.201.0/24, 189.0.0.0/12, 189.128.0.0/9, 189.32.0.0/11, 189.64.0.0/10, 190.0.0.0/10, 190.104.0.0/15, 190.107.0.0/16, 190.108.0.0/14, 190.122.0.0/16, 190.123.8.0/21, 190.124.0.0/14, 190.128.0.0/10, 190.211.0.0/17, 190.216.0.0/13, 190.80.0.0/13, 190.88.0.0/14, 190.94.0.0/15, 190.96.0.0/14, 191.0.0.0/10, 191.100.0.0/16, 191.102.0.0/15, 191.128.0.0/9, 192.114.144.0/22, 192.124.220.0/24, 192.254.96.0/20, 193.135.136.0/24, 193.212.0.0/15, 193.95.0.0/17, 193.95.164.192/26, 195.12.160.0/19, 195.122.31.128/26, 195.13.189.64/26, 195.162.80.0/22, 195.174.0.0/15, 195.222.47.0/24, 195.229.0.0/16, 195.250.64.0/19, 195.5.48.0/20, 196.128.0.0/9, 197.0.0.0/8, 198.231.28.0/22, 200.0.0.0/10, 200.128.0.0/11, 200.160.0.0/15, 200.176.0.0/12, 200.192.0.0/14, 200.198.0.0/15, 200.208.0.0/12, 200.69.64.0/18, 200.72.0.0/13, 200.80.0.0/12, 200.96.0.0/11, 201.0.0.0/11, 201.128.0.0/12, 201.148.0.0/17, 201.152.0.0/13, 201.160.0.0/11, 201.192.0.0/10, 201.47.0.0/16, 201.48.0.0/16, 201.52.0.0/14, 201.56.0.0/13, 201.80.0.0/12, 202.128.0.0/14, 202.136.0.0/13, 202.152.0.0/13, 202.164.128.0/18, 202.176.0.0/14, 202.184.0.0/13, 202.51.79.0/24, 202.64.0.0/14, 202.70.0.0/16, 202.71.0.0/22, 202.72.0.0/14, 202.88.0.0/16, 202.90.0.0/15, 202.93.0.0/16, 203.104.0.0/14, 203.109.128.0/17, 203.112.0.0/12, 203.128.0.0/12, 203.184.0.0/14, 203.192.0.0/10, 203.52.0.0/15, 203.72.0.0/14, 203.76.0.0/15, 203.78.0.0/17, 203.82.0.0/15, 203.99.0.0/16, 204.110.56.0/21, 204.186.0.0/16, 204.236.64.0/18, 207.194.0.0/16, 207.228.128.0/18, 207.229.128.0/18, 207.70.128.0/18, 208.104.0.0/16, 208.66.48.0/21, 209.104.64.0/18, 209.146.0.0/17, 209.148.128.0/17, 209.52.0.0/15, 209.59.64.0/18, 209.91.64.0/18, 210.0.0.0/7, 212.112.117.224/27, 212.113.184.0/22, 212.120.241.0/24, 212.145.0.0/16, 212.154.111.0/24, 212.199.140.0/24, 212.2.96.0/19, 212.217.0.0/17, 212.232.96.0/20, 212.30.0.0/19, 212.43.8.0/21, 212.47.128.0/19, 212.52.128.0/19, 212.56.132.0/23, 212.65.152.0/23, 212.65.158.0/23, 212.68.192.0/20, 212.68.208.0/20, 212.95.183.192/26, 212.96.64.0/19, 213.150.160.0/19, 213.157.192.0/19, 213.202.0.0/21, 213.204.119.0/24, 213.230.52.0/22, 213.52.0.0/17, 213.57.0.0/17, 213.94.76.0/24, 216.177.160.0/19, 217.168.6.0/23, 217.168.80.0/20, 217.22.184.0/22, 217.25.24.0/23, 217.64.96.0/20, 217.73.140.0/23, 217.76.71.0/24, 217.79.128.0/21, 219.0.0.0/8, 222.128.0.0/11, 223.128.0.0/9, 223.27.128.0/17, 24.200.0.0/14, 24.222.0.0/16, 24.236.64.0/18, 24.244.0.0/18, 24.55.64.0/18, 27.64.0.0/11, 3.0.0.0/9, 31.13.64.0/18, 31.145.0.0/16, 31.3.93.0/24, 36.0.0.0/9, 37.152.0.0/22, 37.238.0.0/16, 37.26.80.0/23, 40.96.0.0/12, 41.0.0.0/8, 42.0.0.0/8, 43.224.0.0/16, 43.230.128.0/21, 43.245.96.0/20, 43.246.0.0/15, 43.252.0.0/20, 45.112.176.0/20, 45.113.128.0/18, 45.118.240.0/21, 45.121.128.0/17, 45.160.0.0/12, 45.178.0.0/15, 45.224.0.0/14, 45.228.0.0/15, 45.232.0.0/13, 45.6.64.0/18, 45.64.0.0/16, 45.7.0.0/16, 46.1.124.0/23, 46.196.0.0/16, 46.197.0.0/18, 46.99.249.0/24, 49.224.0.0/13, 49.32.0.0/11, 49.64.0.0/10, 5.104.2.0/24, 5.20.0.0/21, 5.22.176.0/20, 51.39.0.0/16, 52.96.0.0/12, 54.160.0.0/11, 54.224.0.0/11, 57.0.0.0/8, 58.128.0.0/9, 58.16.0.0/12, 59.153.128.0/17, 59.153.64.0/18, 59.160.0.0/11, 60.0.0.0/8, 62.0.0.0/16, 62.1.0.0/16, 62.197.192.0/18, 62.209.24.0/21, 62.24.128.0/17, 62.251.128.0/17, 62.4.128.0/17, 62.74.63.0/26, 62.75.0.0/19, 62.8.64.0/19, 62.84.0.0/20, 63.143.64.0/18, 64.119.192.0/20, 64.66.0.0/20, 65.192.0.0/11, 65.48.128.0/17, 66.128.160.0/19, 66.201.160.0/19, 66.50.0.0/16, 66.8.0.0/17, 66.97.224.0/19, 67.218.80.0/20, 69.92.0.0/16, 70.160.0.0/11, 72.136.0.0/13, 72.192.0.0/11, 74.118.80.0/22, 74.50.208.0/21, 77.136.0.0/16, 77.224.0.0/13, 77.237.0.0/21, 77.243.16.0/21, 77.52.0.0/24, 78.154.160.0/19, 78.159.164.0/22, 78.8.0.0/14, 79.101.112.0/23, 80.76.170.0/23, 81.167.36.0/23, 81.192.0.0/16, 81.196.173.128/26, 81.196.26.128/25, 82.199.192.0/20, 82.76.231.128/26, 82.76.231.192/26, 82.78.186.128/26, 82.78.186.192/26, 82.78.68.0/26, 82.78.68.64/26, 82.85.13.128/26, 82.85.19.0/26, 82.85.43.0/26, 83.119.16.0/20, 83.174.0.0/18, 83.255.224.0/21, 84.15.0.0/16, 84.208.7.0/24, 84.22.34.96/28, 84.91.172.0/24, 85.114.48.0/23, 85.114.96.0/19, 86.110.224.97/32, 86.127.118.0/23, 86.56.128.0/24, 87.201.168.0/21, 87.235.208.0/20, 88.212.9.0/24, 88.216.174.0/24, 89.108.140.0/22, 89.45.2.0/23, 90.244.152.0/21, 91.185.14.0/24, 91.225.200.0/22, 92.63.8.0/21, 92.80.0.0/13, 93.103.0.0/16, 93.191.8.128/26, 93.57.114.0/24, 93.57.122.0/24, 93.57.123.0/24, 93.62.101.0/24, 93.91.192.0/22, 94.153.128.0/17, 94.198.177.0/24, 94.76.104.0/21, 94.79.192.0/19, 94.96.0.0/14, 95.107.145.0/24, 95.209.200.0/21, 95.94.0.0/15",
  "twitter": "104.16.0.0/12, 104.244.40.0/21, 146.75.0.0/16, 151.101.0.0/16, 152.192.0.0/13, 162.158.0.0/15, 172.64.0.0/13, 192.229.128.0/17, 199.232.0.0/16, 209.237.192.0/19, 68.232.32.0/20, 69.195.160.0/19, 93.184.220.0/22",
  "instagram": "102.0.0.0/8, 103.200.28.0/22, 103.214.160.0/20, 103.226.224.0/19, 103.228.130.0/23, 103.230.0.0/17, 103.240.180.0/22, 103.246.240.0/21, 103.252.96.0/19, 103.39.64.0/18, 103.42.0.0/16, 103.56.0.0/17, 103.73.160.0/21, 103.97.0.0/18, 103.97.128.0/18, 104.16.0.0/12, 104.244.40.0/21, 104.64.0.0/10, 107.181.160.0/19, 108.160.160.0/20, 111.0.0.0/8, 112.0.0.0/8, 114.0.0.0/10, 115.126.0.0/15, 116.64.0.0/10, 118.107.180.0/22, 118.128.0.0/9, 119.16.0.0/12, 122.0.0.0/10, 122.248.0.0/14, 124.0.0.0/9, 128.121.0.0/16, 128.242.0.0/16, 129.134.0.0/16, 13.104.0.0/14, 130.211.0.0/16, 148.163.0.0/17, 150.107.0.0/18, 152.192.0.0/13, 154.64.0.0/10, 156.233.0.0/16, 157.240.0.0/16, 159.106.0.0/16, 159.138.0.0/16, 159.65.0.0/16, 162.125.0.0/16, 162.220.8.0/21, 163.70.128.0/17, 168.143.0.0/16, 173.208.128.0/17, 173.231.0.0/18, 173.234.32.0/19, 173.236.128.0/17, 173.244.192.0/19, 173.252.192.0/18, 173.252.64.0/18, 173.255.192.0/18, 174.36.0.0/15, 179.60.0.0/16, 182.0.0.0/9, 184.172.0.0/15, 184.24.0.0/13, 184.50.0.0/15, 184.72.0.0/15, 185.45.4.0/22, 185.60.216.0/22, 192.133.76.0/22, 195.229.0.0/16, 198.27.64.0/18, 198.44.160.0/19, 199.16.156.0/22, 199.193.112.0/21, 199.59.148.0/22, 199.96.56.0/21, 2.16.102.0/23, 2.16.154.0/24, 2.16.16.0/23, 2.16.168.0/23, 2.16.172.0/23, 2.16.52.0/23, 2.17.251.0/24, 2.18.16.0/20, 2.18.64.0/20, 2.19.192.0/24, 2.19.204.0/22, 2.20.45.0/24, 2.21.244.0/23, 2.22.61.0/24, 2.22.80.0/20, 2.23.144.0/20, 2.23.96.0/20, 202.160.0.0/15, 202.182.0.0/15, 202.52.0.0/14, 203.110.0.0/15, 204.79.196.0/23, 205.186.128.0/18, 208.0.0.0/11, 208.101.0.0/18, 208.43.0.0/16, 208.77.40.0/21, 209.95.32.0/19, 210.0.0.0/7, 212.95.165.0/26, 212.95.183.192/26, 213.155.157.0/24, 213.169.57.64/26, 23.0.0.0/12, 23.192.0.0/11, 23.224.0.0/15, 23.234.0.0/18, 23.32.0.0/11, 23.72.0.0/13, 23.96.0.0/13, 31.13.64.0/18, 38.0.0.0/7, 4.0.0.0/9, 43.226.16.0/20, 45.114.8.0/21, 45.76.0.0/15, 47.88.0.0/14, 50.117.0.0/17, 50.22.0.0/15, 50.87.0.0/16, 52.0.0.0/10, 52.160.0.0/11, 54.224.0.0/11, 54.64.0.0/11, 57.0.0.0/8, 59.0.0.0/9, 59.160.0.0/11, 62.115.252.0/24, 62.115.253.0/24, 64.13.192.0/18, 65.49.0.0/17, 66.220.144.0/20, 67.15.0.0/16, 67.228.0.0/16, 67.230.160.0/19, 69.162.128.0/18, 69.171.224.0/19, 69.197.128.0/18, 69.30.0.0/18, 69.50.192.0/19, 69.63.176.0/20, 72.246.0.0/15, 74.86.0.0/16, 75.126.0.0/16, 80.67.82.0/24, 80.87.198.0/23, 87.245.208.0/20, 88.191.249.0/24, 88.221.110.0/24, 88.221.111.0/24, 88.221.128.0/21, 92.122.100.0/22, 92.122.160.0/20, 92.122.224.0/21, 92.122.244.0/22, 92.123.96.0/20, 93.179.96.0/21, 95.100.128.0/20, 95.100.176.0/20, 95.101.108.0/22, 95.101.20.0/22, 95.101.35.0/24, 95.101.72.0/22, 95.101.76.0/22, 96.44.128.0/18, 98.159.96.0/20",
  "facebook": "102.0.0.0/8, 103.200.28.0/22, 103.214.160.0/20, 103.226.224.0/19, 103.228.130.0/23, 103.230.0.0/17, 103.240.180.0/22, 103.246.240.0/21, 103.252.96.0/19, 103.39.64.0/18, 103.42.0.0/16, 103.56.0.0/17, 103.73.160.0/21, 103.97.0.0/18, 103.97.128.0/18, 104.16.0.0/12, 104.244.40.0/21, 104.64.0.0/10, 107.181.160.0/19, 108.160.160.0/20, 111.0.0.0/8, 112.0.0.0/8, 114.0.0.0/10, 115.126.0.0/15, 116.64.0.0/10, 118.107.180.0/22, 118.128.0.0/9, 119.16.0.0/12, 122.0.0.0/10, 122.248.0.0/14, 124.0.0.0/9, 128.121.0.0/16, 128.242.0.0/16, 129.134.0.0/16, 13.104.0.0/14, 130.211.0.0/16, 148.163.0.0/17, 150.107.0.0/18, 152.192.0.0/13, 154.64.0.0/10, 156.233.0.0/16, 157.240.0.0/16, 159.106.0.0/16, 159.138.0.0/16, 159.65.0.0/16, 162.125.0.0/16, 162.220.8.0/21, 163.70.128.0/17, 168.143.0.0/16, 173.208.128.0/17, 173.231.0.0/18, 173.234.32.0/19, 173.236.128.0/17, 173.244.192.0/19, 173.252.192.0/18, 173.252.64.0/18, 173.255.192.0/18, 174.36.0.0/15, 179.60.0.0/16, 182.0.0.0/9, 184.172.0.0/15, 184.24.0.0/13, 184.50.0.0/15, 184.72.0.0/15, 185.45.4.0/22, 185.60.216.0/22, 192.133.76.0/22, 195.229.0.0/16, 198.27.64.0/18, 198.44.160.0/19, 199.16.156.0/22, 199.193.112.0/21, 199.59.148.0/22, 199.96.56.0/21, 2.16.102.0/23, 2.16.154.0/24, 2.16.16.0/23, 2.16.168.0/23, 2.16.172.0/23, 2.16.52.0/23, 2.17.251.0/24, 2.18.16.0/20, 2.18.64.0/20, 2.19.192.0/24, 2.19.204.0/22, 2.20.45.0/24, 2.21.244.0/23, 2.22.61.0/24, 2.22.80.0/20, 2.23.144.0/20, 2.23.96.0/20, 202.160.0.0/15, 202.182.0.0/15, 202.52.0.0/14, 203.110.0.0/15, 204.79.196.0/23, 205.186.128.0/18, 208.0.0.0/11, 208.101.0.0/18, 208.43.0.0/16, 208.77.40.0/21, 209.95.32.0/19, 210.0.0.0/7, 212.95.165.0/26, 212.95.183.192/26, 213.155.157.0/24, 213.169.57.64/26, 23.0.0.0/12, 23.192.0.0/11, 23.224.0.0/15, 23.234.0.0/18, 23.32.0.0/11, 23.72.0.0/13, 23.96.0.0/13, 31.13.64.0/18, 38.0.0.0/7, 4.0.0.0/9, 43.226.16.0/20, 45.114.8.0/21, 45.76.0.0/15, 47.88.0.0/14, 50.117.0.0/17, 50.22.0.0/15, 50.87.0.0/16, 52.0.0.0/10, 52.160.0.0/11, 54.224.0.0/11, 54.64.0.0/11, 57.0.0.0/8, 59.0.0.0/9, 59.160.0.0/11, 62.115.252.0/24, 62.115.253.0/24, 64.13.192.0/18, 65.49.0.0/17, 66.220.144.0/20, 67.15.0.0/16, 67.228.0.0/16, 67.230.160.0/19, 69.162.128.0/18, 69.171.224.0/19, 69.197.128.0/18, 69.30.0.0/18, 69.50.192.0/19, 69.63.176.0/20, 72.246.0.0/15, 74.86.0.0/16, 75.126.0.0/16, 80.67.82.0/24, 80.87.198.0/23, 87.245.208.0/20, 88.191.249.0/24, 88.221.110.0/24, 88.221.111.0/24, 88.221.128.0/21, 92.122.100.0/22, 92.122.160.0/20, 92.122.224.0/21, 92.122.244.0/22, 92.123.96.0/20, 93.179.96.0/21, 95.100.128.0/20, 95.100.176.0/20, 95.101.108.0/22, 95.101.20.0/22, 95.101.35.0/24, 95.101.72.0/22, 95.101.76.0/22, 96.44.128.0/18, 98.159.96.0/20",
  "viber": "100.24.0.0/13, 103.224.0.0/16, 104.16.0.0/12, 104.64.0.0/10, 107.20.0.0/14, 108.136.0.0/14, 108.156.0.0/14, 108.177.0.0/17, 13.208.0.0/12, 13.224.0.0/12, 13.248.0.0/14, 13.32.0.0/12, 136.143.176.0/20, 139.162.0.0/16, 142.250.0.0/15, 143.204.0.0/16, 15.184.0.0/14, 15.196.0.0/14, 152.228.128.0/17, 16.24.0.0/13, 172.104.0.0/15, 172.217.0.0/16, 172.64.0.0/13, 173.194.0.0/16, 173.222.0.0/15, 174.129.0.0/16, 18.128.0.0/9, 18.64.0.0/10, 184.24.0.0/13, 184.50.0.0/15, 184.72.0.0/15, 185.199.108.0/22, 185.53.177.0/24, 188.114.96.0/22, 192.155.80.0/20, 194.90.0.0/16, 199.59.240.0/22, 199.60.103.0/24, 2.19.16.0/20, 2.20.16.0/22, 2.20.208.0/20, 2.21.192.0/20, 2.22.128.0/20, 204.141.0.0/16, 204.236.128.0/17, 209.85.128.0/17, 216.137.32.0/19, 216.198.0.0/18, 216.58.192.0/19, 23.0.0.0/12, 23.192.0.0/11, 23.20.0.0/14, 23.239.0.0/19, 23.32.0.0/11, 23.64.0.0/14, 23.72.0.0/13, 3.0.0.0/9, 3.128.0.0/9, 34.192.0.0/10, 34.64.0.0/10, 35.152.0.0/13, 35.160.0.0/12, 35.176.0.0/13, 37.59.32.0/19, 44.192.0.0/10, 50.16.0.0/14, 51.24.0.0/16, 51.91.18.0/24, 52.0.0.0/10, 52.192.0.0/12, 52.208.0.0/13, 52.222.0.0/16, 52.64.0.0/12, 52.84.0.0/14, 54.144.0.0/12, 54.160.0.0/11, 54.192.0.0/12, 54.208.0.0/13, 54.216.0.0/14, 54.220.0.0/15, 54.224.0.0/11, 54.38.0.0/16, 54.64.0.0/11, 64.233.160.0/19, 65.8.0.0/14, 66.175.208.0/20, 67.202.0.0/18, 69.192.0.0/16, 72.44.32.0/19, 74.125.0.0/16, 74.207.224.0/19, 75.101.128.0/17, 8.0.0.0/13, 8.32.0.0/11, 88.221.68.0/22, 88.221.96.0/22, 92.122.12.0/22, 92.122.68.0/22, 92.123.160.0/21, 92.123.176.0/22, 95.100.224.0/20, 95.100.48.0/20, 95.213.180.0/23, 96.16.0.0/15, 96.6.0.0/15, 98.80.0.0/12, 99.83.128.0/17, 99.84.0.0/16, 99.86.0.0/16",
  "signal": "100.24.0.0/13, 104.16.0.0/12, 104.40.0.0/13, 107.20.0.0/14, 108.136.0.0/14, 108.156.0.0/14, 108.177.0.0/17, 13.208.0.0/12, 13.224.0.0/12, 13.248.0.0/14, 13.32.0.0/12, 142.250.0.0/15, 172.217.0.0/16, 172.64.0.0/13, 173.194.0.0/16, 18.128.0.0/9, 18.64.0.0/10, 184.72.0.0/15, 188.114.96.0/22, 20.184.0.0/13, 20.192.0.0/10, 20.64.0.0/10, 209.85.128.0/17, 216.198.0.0/18, 216.239.32.0/19, 216.58.192.0/19, 23.20.0.0/14, 23.227.32.0/19, 3.0.0.0/9, 3.128.0.0/9, 34.0.0.0/15, 34.192.0.0/10, 34.64.0.0/10, 35.160.0.0/12, 35.192.0.0/12, 35.208.0.0/12, 40.120.0.0/14, 44.192.0.0/10, 50.16.0.0/14, 52.0.0.0/10, 52.192.0.0/12, 52.222.0.0/16, 52.64.0.0/12, 52.84.0.0/14, 54.144.0.0/12, 54.160.0.0/11, 54.208.0.0/13, 54.224.0.0/11, 54.64.0.0/11, 64.233.160.0/19, 65.8.0.0/14, 66.102.0.0/20, 74.125.0.0/16, 76.223.0.0/17, 8.0.0.0/13, 8.32.0.0/11, 98.80.0.0/12, 99.84.0.0/16, 99.86.0.0/16",
  "zetflix": "104.16.0.0/12, 172.64.0.0/13, 188.114.96.0/22",
  "canva": "104.16.0.0/12, 172.64.0.0/13, 188.114.96.0/22, 216.239.32.0/19, 8.0.0.0/13, 8.32.0.0/11",
  "patreon": "103.200.28.0/22, 103.214.160.0/20, 103.226.224.0/19, 103.228.130.0/23, 103.230.0.0/17, 103.240.180.0/22, 103.246.240.0/21, 103.252.96.0/19, 103.39.64.0/18, 103.42.0.0/16, 103.56.0.0/17, 103.73.160.0/21, 103.97.0.0/18, 103.97.128.0/18, 104.16.0.0/12, 104.244.40.0/21, 107.181.160.0/19, 108.136.0.0/14, 108.160.160.0/20, 111.0.0.0/8, 114.0.0.0/10, 115.126.0.0/15, 116.64.0.0/10, 118.107.180.0/22, 118.128.0.0/9, 119.16.0.0/12, 122.0.0.0/10, 122.248.0.0/14, 124.0.0.0/9, 128.121.0.0/16, 128.242.0.0/16, 13.208.0.0/12, 13.32.0.0/12, 13.64.0.0/11, 130.211.0.0/16, 148.163.0.0/17, 150.107.0.0/18, 154.64.0.0/10, 156.233.0.0/16, 157.240.0.0/16, 159.106.0.0/16, 159.138.0.0/16, 159.65.0.0/16, 162.125.0.0/16, 162.220.8.0/21, 167.89.0.0/17, 168.143.0.0/16, 173.208.128.0/17, 173.231.0.0/18, 173.234.32.0/19, 173.236.128.0/17, 173.244.192.0/19, 173.252.192.0/18, 173.252.64.0/18, 173.255.192.0/18, 174.36.0.0/15, 179.60.0.0/16, 18.128.0.0/9, 182.0.0.0/9, 184.172.0.0/15, 184.72.0.0/15, 185.45.4.0/22, 185.60.216.0/22, 192.133.76.0/22, 198.27.64.0/18, 198.44.160.0/19, 199.16.156.0/22, 199.193.112.0/21, 199.59.148.0/22, 199.96.56.0/21, 20.184.0.0/13, 20.64.0.0/10, 202.160.0.0/15, 202.182.0.0/15, 202.52.0.0/14, 203.110.0.0/15, 204.79.196.0/23, 205.186.128.0/18, 208.0.0.0/11, 208.101.0.0/18, 208.43.0.0/16, 208.77.40.0/21, 209.95.32.0/19, 210.0.0.0/7, 216.198.0.0/18, 23.224.0.0/15, 23.234.0.0/18, 23.96.0.0/13, 3.0.0.0/9, 3.128.0.0/9, 31.13.64.0/18, 34.64.0.0/10, 35.208.0.0/12, 38.0.0.0/7, 4.0.0.0/9, 40.126.0.0/18, 43.226.16.0/20, 45.114.8.0/21, 45.76.0.0/15, 46.51.192.0/20, 47.88.0.0/14, 50.117.0.0/17, 50.22.0.0/15, 50.87.0.0/16, 52.0.0.0/10, 52.160.0.0/11, 52.224.0.0/11, 52.84.0.0/14, 54.144.0.0/12, 54.216.0.0/14, 54.224.0.0/11, 54.64.0.0/11, 59.0.0.0/9, 59.160.0.0/11, 64.13.192.0/18, 65.49.0.0/17, 65.8.0.0/14, 66.220.144.0/20, 67.15.0.0/16, 67.228.0.0/16, 67.230.160.0/19, 69.162.128.0/18, 69.171.224.0/19, 69.197.128.0/18, 69.30.0.0/18, 69.50.192.0/19, 69.63.176.0/20, 74.86.0.0/16, 75.126.0.0/16, 80.87.198.0/23, 88.191.249.0/24, 93.179.96.0/21, 96.44.128.0/18, 98.159.96.0/20",
  "proton": "108.136.0.0/14, 108.156.0.0/14, 13.224.0.0/12, 13.32.0.0/12, 143.204.0.0/16, 146.75.0.0/16, 151.101.0.0/16, 18.128.0.0/9, 18.64.0.0/10, 185.70.40.0/22, 199.232.0.0/16, 3.0.0.0/9, 3.128.0.0/9, 52.222.0.0/16, 52.84.0.0/14, 54.192.0.0/12, 54.224.0.0/11, 65.8.0.0/14",
  "nnmclub": "104.16.0.0/12, 172.64.0.0/13, 188.114.96.0/22",
  "rutracker": "104.16.0.0/12, 162.158.0.0/15, 172.64.0.0/13, 185.81.128.0/23, 188.114.96.0/22",
  "kinozal": "104.16.0.0/12, 13.224.0.0/12, 172.224.0.0/12, 172.64.0.0/13, 18.128.0.0/9, 188.114.96.0/22, 199.59.240.0/22, 54.160.0.0/11",
  "copilot": "104.208.0.0/13, 104.40.0.0/13, 104.64.0.0/10, 13.104.0.0/14, 13.64.0.0/11, 131.253.32.0/20, 132.196.0.0/16, 138.91.0.0/16, 140.82.112.0/20, 150.168.0.0/14, 152.192.0.0/13, 173.222.0.0/15, 184.24.0.0/13, 184.50.0.0/15, 184.84.0.0/14, 2.16.10.0/23, 2.16.106.0/23, 2.16.110.0/23, 2.16.134.0/23, 2.16.152.0/23, 2.16.158.0/24, 2.16.16.0/23, 2.16.164.0/23, 2.16.172.0/23, 2.16.18.0/23, 2.16.192.0/20, 2.16.224.0/19, 2.16.26.0/23, 2.16.56.0/23, 2.16.64.0/23, 2.17.112.0/22, 2.17.196.0/22, 2.17.20.0/22, 2.17.208.0/20, 2.17.32.0/19, 2.17.96.0/20, 2.18.16.0/20, 2.18.252.0/22, 2.18.32.0/20, 2.18.64.0/20, 2.19.112.0/20, 2.19.160.0/20, 2.19.176.0/20, 2.19.192.0/24, 2.19.193.0/24, 2.19.194.0/23, 2.19.240.0/20, 2.19.48.0/20, 2.19.80.0/20, 2.19.96.0/23, 2.20.134.0/23, 2.20.142.0/23, 2.20.242.0/24, 2.20.244.0/23, 2.20.253.0/24, 2.20.45.0/24, 2.20.96.0/20, 2.21.0.0/20, 2.21.128.0/20, 2.21.16.0/20, 2.21.243.0/24, 2.21.244.0/23, 2.21.32.0/20, 2.21.64.0/20, 2.21.96.0/20, 2.22.228.0/24, 2.22.230.0/23, 2.22.240.0/23, 2.22.244.0/23, 2.22.248.0/23, 2.22.250.0/23, 2.22.28.0/22, 2.22.54.0/24, 2.23.160.0/20, 2.23.208.0/20, 2.23.224.0/19, 2.23.96.0/20, 20.184.0.0/13, 20.192.0.0/10, 20.40.0.0/13, 20.48.0.0/12, 20.64.0.0/10, 204.79.196.0/23, 23.0.0.0/12, 23.192.0.0/11, 23.32.0.0/11, 23.64.0.0/14, 23.72.0.0/13, 4.144.0.0/12, 4.224.0.0/12, 40.74.0.0/15, 40.76.0.0/14, 40.80.0.0/12, 51.10.0.0/15, 51.104.0.0/15, 51.116.0.0/16, 51.132.0.0/16, 52.136.0.0/13, 52.160.0.0/11, 52.224.0.0/11, 62.115.252.0/24, 62.115.253.0/24, 68.220.0.0/15, 79.140.80.0/23, 79.140.94.0/23, 80.239.137.128/25, 80.239.150.0/25, 80.239.254.0/24, 88.221.120.0/22, 88.221.128.0/21, 88.221.192.0/21, 88.221.208.0/21, 88.221.221.0/24, 88.221.24.0/22, 88.221.83.0/24, 88.221.87.0/24, 88.221.92.0/23, 92.122.125.0/24, 92.122.212.0/22, 92.122.218.0/23, 92.122.224.0/21, 92.122.92.0/22, 92.123.128.0/22, 92.123.132.0/22, 92.123.184.0/21, 92.123.236.0/22, 92.123.96.0/20, 93.186.134.0/23, 93.186.137.128/25, 95.100.144.0/20, 95.100.192.0/20, 95.100.242.0/24, 95.100.243.0/24, 95.100.248.0/24, 95.100.80.0/20, 95.100.96.0/20, 95.101.132.0/22, 95.101.136.0/22, 95.101.140.0/22, 95.101.168.0/21, 95.101.180.0/22, 95.101.20.0/22, 95.101.235.0/24, 95.101.24.0/22, 95.101.34.0/24, 95.101.35.0/24, 95.101.36.0/22, 95.101.60.0/22, 95.101.72.0/22, 95.101.76.0/22, 95.101.8.0/22, 96.16.0.0/15",
  "animego": "104.16.0.0/12, 172.64.0.0/13, 185.178.208.0/22, 49.13.80.0/20",
  "pornhub": "152.192.0.0/13, 208.99.64.0/19, 216.18.160.0/19, 64.210.128.0/19, 64.88.240.0/20, 66.254.96.0/19, 67.22.48.0/21, 67.22.56.0/22",
  "jutsu": "104.16.0.0/12, 116.202.8.0/21, 116.202.96.0/20, 116.203.248.0/21, 128.140.0.0/16, 136.243.0.0/16, 138.199.128.0/17, 138.200.0.0/15, 144.76.0.0/16, 148.251.0.0/16, 157.90.0.0/16, 159.69.0.0/16, 168.119.0.0/16, 172.64.0.0/13, 176.9.1.224/27, 176.9.106.0/27, 176.9.114.128/27, 176.9.114.96/27, 176.9.125.192/27, 176.9.125.32/27, 176.9.138.128/27, 176.9.139.64/27, 176.9.142.128/27, 176.9.145.128/27, 176.9.145.32/27, 176.9.149.160/27, 176.9.158.32/27, 176.9.17.0/27, 176.9.18.192/27, 176.9.18.224/27, 176.9.23.96/27, 176.9.24.32/27, 176.9.29.96/27, 176.9.3.64/27, 176.9.31.64/27, 176.9.44.0/27, 176.9.44.192/27, 176.9.44.224/27, 176.9.44.32/27, 176.9.44.96/27, 176.9.45.0/27, 176.9.45.128/27, 176.9.46.0/27, 176.9.46.64/27, 176.9.51.224/27, 176.9.54.192/27, 176.9.62.224/27, 176.9.65.96/27, 176.9.70.128/27, 176.9.71.128/27, 176.9.76.64/27, 176.9.77.192/27, 176.9.79.96/27, 176.9.82.160/27, 176.9.82.64/27, 176.9.82.96/27, 176.9.84.0/27, 176.9.90.224/27, 176.9.92.0/27, 176.9.93.224/27, 178.63.23.128/26, 178.63.40.64/26, 178.63.8.64/26, 178.63.93.192/26, 188.114.96.0/22, 188.245.224.0/20, 188.34.176.0/20, 188.40.103.192/26, 188.40.138.192/26, 188.40.41.128/26, 188.40.73.64/26, 194.49.53.21/32, 198.16.64.0/18, 213.239.200.0/23, 23.88.0.0/17, 46.4.100.64/27, 46.4.103.128/27, 46.4.104.224/27, 46.4.114.64/27, 46.4.119.96/27, 46.4.13.64/26, 46.4.69.0/27, 46.4.71.160/27, 46.4.78.128/27, 49.12.184.0/21, 49.12.208.0/20, 49.12.32.0/20, 49.12.96.0/20, 49.13.0.0/20, 49.13.16.0/20, 49.13.48.0/20, 49.13.64.0/20, 49.13.80.0/20, 5.75.240.0/20, 5.9.100.128/27, 5.9.100.160/27, 5.9.100.32/27, 5.9.102.32/27, 5.9.104.32/27, 5.9.105.32/27, 5.9.107.160/27, 5.9.108.192/27, 5.9.111.160/27, 5.9.113.96/27, 5.9.117.0/27, 5.9.121.224/27, 5.9.121.64/27, 5.9.122.0/27, 5.9.123.64/27, 5.9.124.32/27, 5.9.13.32/27, 5.9.136.32/27, 5.9.137.224/27, 5.9.138.160/27, 5.9.138.224/27, 5.9.138.32/27, 5.9.139.224/27, 5.9.140.128/27, 5.9.140.32/27, 5.9.141.160/27, 5.9.144.224/27, 5.9.145.0/27, 5.9.145.224/27, 5.9.145.96/27, 5.9.147.224/27, 5.9.148.32/27, 5.9.149.160/27, 5.9.149.224/27, 5.9.149.32/27, 5.9.150.0/27, 5.9.151.160/27, 5.9.151.96/27, 5.9.154.64/27, 5.9.155.160/27, 5.9.156.0/27, 5.9.156.128/27, 5.9.17.96/27, 5.9.18.192/27, 5.9.207.168/29, 5.9.21.64/27, 5.9.25.192/27, 5.9.28.64/27, 5.9.38.160/27, 5.9.51.128/27, 5.9.52.0/27, 5.9.52.96/27, 5.9.54.0/27, 5.9.54.32/27, 5.9.57.128/27, 5.9.57.96/27, 5.9.61.64/27, 5.9.63.64/27, 5.9.67.224/27, 5.9.7.0/27, 5.9.7.160/27, 5.9.72.64/27, 5.9.74.64/27, 5.9.74.96/27, 5.9.77.224/27, 5.9.78.64/27, 5.9.79.192/27, 5.9.81.96/27, 5.9.83.128/27, 5.9.85.160/27, 5.9.85.32/27, 5.9.86.0/27, 5.9.89.96/27, 5.9.93.0/27, 5.9.94.160/27, 5.9.95.0/27, 5.9.99.192/27, 5.9.99.96/27, 78.46.108.0/22, 78.46.174.128/27, 78.46.18.0/26, 78.46.181.160/29, 78.46.205.48/29, 78.46.214.136/29, 78.46.214.168/29, 78.46.32.0/19, 78.46.64.0/19, 78.47.74.168/29, 78.47.80.64/27, 78.47.81.176/29, 8.0.0.0/13, 8.32.0.0/11, 88.198.119.192/28, 88.198.121.112/29, 88.198.122.32/29, 88.198.138.16/29, 88.198.158.24/29, 88.198.16.0/20, 88.198.201.152/29, 88.198.215.104/29, 88.198.217.88/29, 88.198.230.128/27, 88.198.230.192/27, 88.198.32.0/19, 88.198.93.0/29, 88.99.122.0/27, 88.99.84.160/27, 91.107.192.0/20, 94.130.222.64/26",
  "yummyanime": "104.16.0.0/12, 172.224.0.0/12, 172.64.0.0/13, 172.99.188.0/22, 188.114.96.0/22, 199.59.240.0/22, 45.95.201.0/24, 50.7.0.0/16, 67.159.0.0/18, 87.236.177.0/24",
  "xvideos": "104.16.0.0/12, 109.61.41.0/24, 121.127.45.0/24, 138.199.0.0/18, 143.244.32.0/19, 156.146.32.0/19, 169.150.192.0/18, 172.64.0.0/13, 185.102.217.0/24, 185.180.12.0/24, 185.180.13.192/27, 185.246.208.0/24, 185.246.211.0/24, 185.59.222.0/25, 185.76.9.0/24, 185.88.180.0/22, 185.93.2.0/25, 188.114.96.0/22, 195.181.166.0/24, 212.102.54.0/23, 212.102.56.0/23, 37.19.203.0/24, 37.19.218.0/24, 45.82.101.0/24, 79.127.178.0/24, 79.127.203.0/24, 8.0.0.0/13, 8.32.0.0/11, 84.17.50.0/23, 84.17.56.0/23, 84.17.59.0/26, 87.249.131.0/24, 89.187.170.0/23, 91.206.163.0/24, 92.223.40.0/24, 93.123.17.0/24",
  "pornolab": "13.224.0.0/12, 172.224.0.0/12, 18.128.0.0/9, 185.110.92.0/24, 185.61.148.0/23, 199.59.240.0/22, 54.160.0.0/11, 94.140.96.0/19, 95.215.46.0/23",
  "ficbook": "104.16.0.0/12, 172.64.0.0/13, 185.206.164.0/22",
  "rutor": "104.16.0.0/12, 172.64.0.0/13, 188.114.96.0/22, 193.46.255.0/24, 75.2.0.0/17",
  "itchio": "104.16.0.0/12, 104.64.0.0/10, 172.64.0.0/13, 2.16.10.0/23, 2.16.102.0/23, 2.16.154.0/24, 2.16.16.0/23, 2.16.56.0/23, 2.17.251.0/24, 2.18.64.0/20, 2.19.112.0/20, 2.19.204.0/22, 2.22.80.0/20, 209.95.32.0/19, 212.95.165.0/26, 23.192.0.0/11, 23.32.0.0/11, 23.72.0.0/13, 35.192.0.0/12, 45.79.0.0/16, 5.178.42.128/25, 8.0.0.0/13, 8.32.0.0/11, 88.221.128.0/21, 92.122.244.0/22, 92.123.132.0/22",
  "modrinth": "104.16.0.0/12, 167.235.0.0/16, 172.64.0.0/13, 185.206.148.0/22, 192.95.0.0/18, 199.48.60.0/24, 23.109.0.0/16, 35.192.0.0/12, 40.160.0.0/16, 57.0.0.0/8, 8.0.0.0/13, 8.32.0.0/11"
};

/**
 * Клиент для работы с API Cloudflare WARP
 */
class CloudflareWarpClient {
  static BASE_URL = 'https://api.cloudflareclient.com/v0i1909051800';
  static DEFAULT_HEADERS = {
    'User-Agent': 'okhttp/3.12.1',
    'Content-Type': 'application/json',
  };

  async registerClient(publicKey) {
    const requestBody = {
      install_id: '',
      tos: new Date().toISOString(),
      key: publicKey,
      fcm_token: '',
      type: 'ios',
      locale: 'en_US',
    };

    const response = await this.makeRequest('POST', 'reg', requestBody);
    
    if (!response.result?.id || !response.result?.token) {
      throw new Error('Invalid registration response structure');
    }

    return {
      id: response.result.id,
      token: response.result.token,
    };
  }

  async enableWarp(clientId, token) {
    const headers = {
      ...CloudflareWarpClient.DEFAULT_HEADERS,
      'Authorization': `Bearer ${token}`,
    };

    const response = await this.makeRequest('PATCH', `reg/${clientId}`, { warp_enabled: true }, headers);

    if (!response.result?.config?.peers?.[0] || !response.result?.config?.interface) {
      throw new Error('Invalid WARP configuration response structure');
    }

    return response;
  }

  async makeRequest(method, endpoint, body = null, customHeaders = null) {
    const url = `${CloudflareWarpClient.BASE_URL}/${endpoint}`;
    const headers = customHeaders || CloudflareWarpClient.DEFAULT_HEADERS;

    const options = { method, headers };

    if (body && (method === 'POST' || method === 'PATCH')) {
      options.body = JSON.stringify(body);
    }

    try {
      const response = await fetch(url, options);
      
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      return await response.json();
    } catch (error) {
      throw new Error(`Cloudflare API request failed: ${error.message}`);
    }
  }
}

/**
 * Расширенный генератор QR кодов
 */
class EnhancedQRCodeGenerator {
  static async generate(text, configFormat = 'wireguard') {
    // Для некоторых форматов QR коды не поддерживаются
    const unsupportedFormats = ['clash', 'nekoray', 'husi', 'karing'];
    
    if (unsupportedFormats.includes(configFormat)) {
      return EnhancedQRCodeGenerator.generateUnsupportedSVG(configFormat);
    }

    try {
      const response = await fetch(`https://api.qrserver.com/v1/create-qr-code/?size=200x200&format=png&data=${encodeURIComponent(text)}`, {
        method: 'GET',
        headers: {
          'User-Agent': 'Mozilla/5.0 (compatible; WarpGenerator/1.0)'
        }
      });
      
      if (response.ok) {
        const arrayBuffer = await response.arrayBuffer();
        const bytes = new Uint8Array(arrayBuffer);
        let binary = '';
        
        for (let i = 0; i < bytes.length; i++) {
          binary += String.fromCharCode(bytes[i]);
        }
        
        return `data:image/png;base64,${btoa(binary)}`;
      }
    } catch (error) {
      console.warn('QR generation via API failed:', error);
    }
    
    return EnhancedQRCodeGenerator.generateFallbackSVG();
  }

  static generateUnsupportedSVG(configFormat) {
    const formatNames = {
      clash: 'Clash',
      nekoray: 'NekoRay',
      husi: 'Husi',
      karing: 'Karing'
    };
    
    const formatName = formatNames[configFormat] || configFormat;
    
    const svg = `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200" style="border: 1px solid #ccc;">
      <rect width="200" height="200" fill="white"/>
      <polygon points="100,30 170,150 30,150" fill="none" stroke="#f59e0b" stroke-width="3"/>
      <text x="100" y="140" text-anchor="middle" font-family="Arial" font-size="24" fill="#f59e0b">!</text>
      <text x="100" y="175" text-anchor="middle" font-family="Arial" font-size="12" fill="#6b7280">${formatName}</text>
      <text x="100" y="190" text-anchor="middle" font-family="Arial" font-size="10" fill="#9ca3af">QR не поддерживается</text>
    </svg>`;

    return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;
  }

  static generateFallbackSVG() {
    const svg = `<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200" style="border: 1px solid #ccc;">
      <rect width="200" height="200" fill="white"/>
      <circle cx="100" cy="100" r="70" fill="none" stroke="black" stroke-width="2"/>
      <circle cx="80" cy="85" r="5" fill="none" stroke="black" stroke-width="2"/>
      <circle cx="120" cy="85" r="5" fill="none" stroke="black" stroke-width="2"/>
      <path d="M 75 125 Q 100 110 125 125" fill="none" stroke="black" stroke-width="2"/>
      <text x="100" y="180" text-anchor="middle" font-family="Arial" font-size="10" fill="gray">QR код недоступен</text>
    </svg>`;

    return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;
  }
}

/**
 * Утилиты для криптографии
 */
class CryptoUtils {
  static generateKeyPair() {
    const keyPair = nacl.box.keyPair();
    
    return {
      privateKey: Buffer.from(keyPair.secretKey).toString('base64'),
      publicKey: Buffer.from(keyPair.publicKey).toString('base64'),
    };
  }

  static stringToBase64(str) {
    return Buffer.from(str).toString('base64');
  }
}

/**
 * Расширенный построитель конфигураций с поддержкой множественных форматов
 */
class EnhancedWarpConfigBuilder {
  static DEVICE_PROFILES = {
    computer: { jc: 4, jmin: 40, jmax: 70 },
    phone: { jc: 120, jmin: 23, jmax: 911 },
    awg15: { jc: 120, jmin: 23, jmax: 911 },
  };

  static build(params) {
    switch (params.configFormat) {
      case 'wireguard':
        return EnhancedWarpConfigBuilder.buildWireGuardConfig(params);
      case 'throne':
        return EnhancedWarpConfigBuilder.buildThroneConfig(params);
      case 'clash':
        return EnhancedWarpConfigBuilder.buildClashConfig(params);
      case 'nekoray':
        return EnhancedWarpConfigBuilder.buildNekoRayConfig(params);
      case 'husi':
        return EnhancedWarpConfigBuilder.buildHusiConfig(params);
      case 'karing':
        return EnhancedWarpConfigBuilder.buildKaringConfig(params);
      default:
        return EnhancedWarpConfigBuilder.buildWireGuardConfig(params);
    }
  }

  static buildForQR(params) {
    if (params.configFormat === 'throne') {
      return EnhancedWarpConfigBuilder.buildThroneConfig(params);
    }
    
    const fullConfig = EnhancedWarpConfigBuilder.build(params);
    return fullConfig.replace(/^MTU = \d+\n?/gm, '');
  }

  static buildWireGuardConfig(params) {
    const interfaceSection = EnhancedWarpConfigBuilder.buildInterfaceSection(params);
    const peerSection = EnhancedWarpConfigBuilder.buildPeerSection(params);
    
    return `${interfaceSection}\n\n${peerSection}`;
  }

  static buildThroneConfig(params) {
    const { privateKey, clientIPv4, clientIPv6, endpoint, deviceType } = params;
    const profile = EnhancedWarpConfigBuilder.DEVICE_PROFILES[deviceType];
    
    const cleanPrivateKey = privateKey.replace(/=$/, '');
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedForThrone(params.reserved || '');

    return `wg://${endpoint}?private_key=${cleanPrivateKey}%3D&peer_public_key=bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo%3D&pre_shared_key=&reserved=${reservedFormatted}&persistent_keepalive=0&mtu=1280&use_system_interface=false&local_address=${clientIPv4}/32-${clientIPv6}/128&workers=0&enable_amnezia=true&junk_packet_count=${profile.jc}&junk_packet_min_size=${profile.jmin}&junk_packet_max_size=${profile.jmax}&init_packet_junk_size=0&response_packet_junk_size=0&init_packet_magic_header=1&response_packet_magic_header=2&underload_packet_magic_header=3&transport_packet_magic_header=4#WARP`;
  }

  static buildClashConfig(params) {
    const { privateKey, publicKey, clientIPv4, endpoint } = params;
    const reserved = params.reserved || '';
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedArray(reserved);
    const [server, port] = endpoint.split(':');

    return `proxies:
- name: "WARP"
  type: wireguard
  private-key: ${privateKey}
  server: ${server}
  port: ${port || '500'}
  ip: ${clientIPv4}
  public-key: ${publicKey}
  allowed-ips: ['0.0.0.0/0']
  reserved: [${reservedFormatted}]
  udp: true
  mtu: 1280
  remote-dns-resolve: true
  dns: [1.1.1.1, 1.0.0.1, 2606:4700:4700::1111, 2606:4700:4700::1001]
  amnezia-wg-option:
   jc: 120
   jmin: 23
   jmax: 911
   s1: 0
   s2: 0
   h1: 1
   h2: 2
   h4: 3
   h3: 4

proxy-groups:
- name: Cloudflare
  type: select
  icon: https://developers.cloudflare.com/_astro/logo.p_ySeMR1.svg
  proxies:
    - WARP
  url: 'http://speed.cloudflare.com/'
  interval: 300`;
  }

  static buildNekoRayConfig(params) {
    const { privateKey, publicKey, clientIPv4, clientIPv6, endpoint } = params;
    const reserved = params.reserved || '';
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedArray(reserved);
    const [server, port] = endpoint.split(':');

    return JSON.stringify({
      mtu: 1280,
      reserved: reservedFormatted.split(', ').map(Number),
      private_key: privateKey,
      type: "wireguard",
      local_address: [`${clientIPv4}/32`, `${clientIPv6}/128`],
      peer_public_key: publicKey,
      server: server,
      server_port: parseInt(port || '500', 10)
    }, null, 2);
  }

  static buildHusiConfig(params) {
    const { privateKey, publicKey, clientIPv4, clientIPv6, endpoint, allowedIPs } = params;
    const reserved = params.reserved || '';
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedArray(reserved);
    const [server, port] = endpoint.split(':');

    return JSON.stringify({
      type: "wireguard",
      tag: "proxy",
      mtu: 1280,
      address: [`${clientIPv4}/32`, `${clientIPv6}/128`],
      private_key: privateKey,
      listen_port: 0,
      peers: [
        {
          address: server,
          port: parseInt(port || '500', 10),
          public_key: publicKey,
          pre_shared_key: "",
          allowed_ips: allowedIPs.split(', '),
          persistent_keepalive_interval: 600,
          reserved: reservedFormatted
        }
      ],
      detour: "direct"
    }, null, 2);
  }

  static buildKaringConfig(params) {
    const { privateKey, publicKey, clientIPv4, clientIPv6, endpoint } = params;
    const reserved = params.reserved || '';
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedArray(reserved);
    const [server, port] = endpoint.split(':');

    return JSON.stringify({
      outbounds: [
        {
          tag: "WARP",
          reserved: reservedFormatted.split(', ').map(Number),
          mtu: 1280,
          fake_packets: "5-10",
          fake_packets_size: "40-100",
          fake_packets_delay: "20-250",
          fake_packets_mode: "m4",
          private_key: privateKey,
          type: "wireguard",
          local_address: [`${clientIPv4}/32`, `${clientIPv6}/128`],
          peer_public_key: publicKey,
          server: server || "engage.cloudflareclient.com",
          server_port: parseInt(port || '500', 10)
        }
      ]
    }, null, 2);
  }

  static buildWarpInWarpConfig(params) {
    const { privateKey, publicKey, clientIPv4, clientIPv6, endpoint } = params;
    const reserved = params.reserved || '';
    const reservedFormatted = EnhancedWarpConfigBuilder.formatReservedArray(reserved);
    const randomNumber = Math.floor(Math.random() * (99 - 10 + 1)) + 10;
    const randomNumber2 = Math.floor(Math.random() * (99 - 10 + 1)) + 10;
    const [server, port] = endpoint.split(':');

    return JSON.stringify({
      outbounds: [
        {
          tag: `WARP_${randomNumber}`,
          reserved: reservedFormatted.split(', ').map(Number),
          mtu: 1280,
          fake_packets: "5-10",
          fake_packets_size: "40-100",
          fake_packets_delay: "20-250",
          fake_packets_mode: "m4",
          private_key: privateKey,
          type: "wireguard",
          local_address: [`${clientIPv4}/32`, `${clientIPv6}/128`],
          peer_public_key: publicKey,
          server: server || "162.159.192.1",
          server_port: parseInt(port || '500', 10)
        },
        {
          type: "wireguard",
          tag: `WARPinWARP_${randomNumber2}`,
          detour: `WARP_${randomNumber}`,
          local_address: [`${clientIPv4}/32`, `${clientIPv6}/128`],
          private_key: privateKey,
          peer_public_key: publicKey,
          reserved: reservedFormatted.split(', ').map(Number),
          mtu: 1200,
          server: server || "162.159.192.1",
          server_port: 2408
        }
      ]
    }, null, 2);
  }

  static buildInterfaceSection(params) {
    const { privateKey, clientIPv4, clientIPv6, deviceType } = params;
    const profile = EnhancedWarpConfigBuilder.DEVICE_PROFILES[deviceType];

    const lines = [
      '[Interface]',
      `PrivateKey = ${privateKey}`,
      `Address = ${clientIPv4}, ${clientIPv6}`,
      'DNS = 1.1.1.1, 2606:4700:4700::1111, 1.0.0.1, 2606:4700:4700::1001',
      'MTU = 1280',
      'S1 = 0',
      'S2 = 0',
      `Jc = ${profile.jc}`,
      `Jmin = ${profile.jmin}`,
      `Jmax = ${profile.jmax}`,
      'H1 = 1',
      'H2 = 2',
      'H3 = 3',
      'H4 = 4',
    ];

    if (deviceType === 'awg15') {
      lines.push('I1 = <b 0xc2000000011419fa4bb3599f336777de79f81ca9a8d80d91eeec000044c635cef024a885dcb66d1420a91a8c427e87d6cf8e08b563932f449412cddf77d3e2594ea1c7a183c238a89e9adb7ffa57c133e55c59bec101634db90afb83f75b19fe703179e26a31902324c73f82d9354e1ed8da39af610afcb27e6590a44341a0828e5a3d2f0e0f7b0945d7bf3402feea0ee6332e19bdf48ffc387a97227aa97b205a485d282cd66d1c384bafd63dc42f822c4df2109db5b5646c458236ddcc01ae1c493482128bc0830c9e1233f0027a0d262f92b49d9d8abd9a9e0341f6e1214761043c021d7aa8c464b9d865f5fbe234e49626e00712031703a3e23ef82975f014ee1e1dc428521dc23ce7c6c13663b19906240b3efe403cf30559d798871557e4e60e86c29ea4504ed4d9bb8b549d0e8acd6c334c39bb8fb42ede68fb2aadf00cfc8bcc12df03602bbd4fe701d64a39f7ced112951a83b1dbbe6cd696dd3f15985c1b9fef72fa8d0319708b633cc4681910843ce753fac596ed9945d8b839aeff8d3bf0449197bd0bb22ab8efd5d63eb4a95db8d3ffc796ed5bcf2f4a136a8a36c7a0c65270d511aebac733e61d414050088a1c3d868fb52bc7e57d3d9fd132d78b740a6ecdc6c24936e92c28672dbe00928d89b891865f885aeb4c4996d50c2bbbb7a99ab5de02ac89b3308e57bcecf13f2da0333d1420e18b66b4c23d625d836b538fc0c221d6bd7f566a31fa292b85be96041d8e0bfe655d5dc1afed23eb8f2b3446561bbee7644325cc98d31cea38b865bdcc507e48c6ebdc7553be7bd6ab963d5a14615c4b81da7081c127c791224853e2d19bafdc0d9f3f3a6de898d14abb0e2bc849917e0a599ed4a541268ad0e60ea4d147dc33d17fa82f22aa505ccb53803a31d10a7ca2fea0b290a52ee92c7bf4aab7cea4e3c07b1989364eed87a3c6ba65188cd349d37ce4eefde9ec43bab4b4dc79e03469c2ad6b902e28e0bbbbf696781ad4edf424ffb35ce0236d373629008f142d04b5e08a124237e03e3149f4cdde92d7fae581a1ac332e26b2c9c1a6bdec5b3a9c7a2a870f7a0c25fc6ce245e029b686e346c6d862ad8df6d9b62474fbc31dbb914711f78074d4441f4e6e9edca3c52315a5c0653856e23f681558d669f4a4e6915bcf42b56ce36cb7dd3983b0b1d6fdf0f8efddb68e7ca0ae9dd4570fe6978fbb524109f6ec957ca61f1767ef74eb803b0f16abd0087cf2d01bc1db1c01d97ac81b3196c934586963fe7cf2d310e0739621e8bd00dc23fded18576d8c8f285d7bb5f43b547af3c76235de8b6f757f817683b2151600b11721219212bf27558edd439e73fce951f61d582320e5f4d6c315c71129b719277fc144bbe8ded25ab6d29b6e189c9bd9b16538faf60cc2aab3c3bb81fc2213657f2dd0ceb9b3b871e1423d8d3e8cc008721ef03b28e0ee7bb66b8f2a2ac01ef88df1f21ed49bf1ce435df31ac34485936172567488812429c269b49ee9e3d99652b51a7a614b7c460bf0d2d64d8349ded7345bedab1ea0a766a8470b1242f38d09f7855a32db39516c2bd4bcc538c52fa3a90c8714d4b006a15d9c7a7d04919a1cab48da7cce0d5de1f9e5f8936cffe469132991c6eb84c5191d1bcf69f70c58d9a7b66846440a9f0eef25ee6ab62715b50ca7bef0bc3013d4b62e1639b5028bdf757454356e9326a4c76dabfb497d451a3a1d2dbd46ec283d255799f72dfe878ae25892e25a2542d3ca9018394d8ca35b53ccd94947a8>');
    }

    return lines.join('\n');
  }

  static buildPeerSection(params) {
    const { publicKey, allowedIPs, endpoint } = params;

    return [
      '[Peer]',
      `PublicKey = ${publicKey}`,
      `AllowedIPs = ${allowedIPs}`,
      `Endpoint = ${endpoint}`,
    ].join('\n');
  }

  static formatReservedForThrone(reserved) {
    if (!reserved) return '0-0-0';
    
    try {
      const buffer = Buffer.from(reserved, 'base64');
      const bytes = Array.from(buffer);
      return bytes.join('-');
    } catch {
      return '0-0-0';
    }
  }

  static formatReservedArray(reserved) {
    if (!reserved) return '0, 0, 0';
    
    try {
      const buffer = Buffer.from(reserved, 'base64');
      const bytes = Array.from(buffer);
      return bytes.join(', ');
    } catch {
      return '0, 0, 0';
    }
  }
}

/**
 * Менеджер IP диапазонов
 */
class IPRangesManager {
  constructor() {
    this.ipRanges = ipRanges;
  }

  getServiceRanges(serviceKey) {
    const ranges = this.ipRanges[serviceKey];
    if (!ranges) {
      return [];
    }

    return ranges.split(', ').map(range => range.trim());
  }

  getCombinedRanges(serviceKeys) {
    const uniqueRanges = new Set();

    serviceKeys.forEach(serviceKey => {
      const ranges = this.getServiceRanges(serviceKey);
      ranges.forEach(range => uniqueRanges.add(range));
    });

    return Array.from(uniqueRanges);
  }

  generateAllowedIPs(serviceKeys, includeAll = false) {
    if (includeAll) {
      return '0.0.0.0/0, ::/0';
    }

    const ranges = this.getCombinedRanges(serviceKeys);
    
    if (ranges.length === 0) {
      return '0.0.0.0/0, ::/0';
    }

    return ranges.join(', ');
  }

  isServiceSupported(serviceKey) {
    return serviceKey in this.ipRanges;
  }
}

/**
 * Расширенный сервис для генерации WARP конфигураций
 */
class EnhancedWarpService {
  constructor() {
    this.cloudflareClient = new CloudflareWarpClient();
    this.ipRangesManager = new IPRangesManager();
  }

  async generateConfig(request) {
    try {
      console.log('Starting enhanced WARP config generation...');
      
      const configFormat = request.configFormat || 'wireguard';
      
      // Генерация ключей
      const keyPair = CryptoUtils.generateKeyPair();

      // Регистрация клиента
      const { id: clientId, token } = await this.cloudflareClient.registerClient(keyPair.publicKey);

      // Включение WARP
      const warpConfig = await this.cloudflareClient.enableWarp(clientId, token);

      // Извлечение параметров
      const configParams = this.extractConfigParams(warpConfig, keyPair, request);

      // Построение конфигурации
      const config = EnhancedWarpConfigBuilder.build(configParams);
      const configForQR = EnhancedWarpConfigBuilder.buildForQR(configParams);

      // Генерация QR кода
      const qrCodeBase64 = await EnhancedQRCodeGenerator.generate(configForQR, configFormat);

      // Генерация имени файла
      const fileName = this.generateFileName(configFormat);

      console.log(`Enhanced WARP configuration (${configFormat}) generated successfully`);
      
      return {
        configBase64: CryptoUtils.stringToBase64(config),
        qrCodeBase64,
        configFormat,
        fileName
      };
    } catch (error) {
      console.error('Failed to generate enhanced WARP configuration:', error);
      throw error;
    }
  }

  extractConfigParams(warpConfig, keyPair, request) {
    const peer = warpConfig.result.config.peers[0];
    const interfaceConfig = warpConfig.result.config.interface;
    const configFormat = request.configFormat || 'wireguard';

    const allowedIPs = this.generateAllowedIPs(request);

    // Извлекаем reserved из client_id если доступен
    let reserved = '';
    if (warpConfig.result.config.client_id) {
      reserved = warpConfig.result.config.client_id;
    }

    return {
      privateKey: keyPair.privateKey,
      publicKey: peer.public_key,
      clientIPv4: interfaceConfig.addresses.v4,
      clientIPv6: interfaceConfig.addresses.v6,
      allowedIPs,
      endpoint: request.endpoint,
      deviceType: request.deviceType,
      configFormat,
      reserved
    };
  }

  generateAllowedIPs(request) {
    const { selectedServices, siteMode } = request;

    if (siteMode === 'all') {
      return '0.0.0.0/0, ::/0';
    }

    const supportedServices = selectedServices.filter(service => 
      this.ipRangesManager.isServiceSupported(service)
    );

    if (supportedServices.length === 0) {
      return '0.0.0.0/0, ::/0';
    }

    return this.ipRangesManager.generateAllowedIPs(supportedServices);
  }

  generateFileName(configFormat) {
    const randomId = Math.floor(Math.random() * 9000000) + 1000000;
    
    switch (configFormat) {
      case 'throne':
        return `THRONE${randomId}.txt`;
      case 'clash':
        return `CLASH${randomId}.yaml`;
      case 'nekoray':
        return `NEKORAY${randomId}.json`;
      case 'husi':
        return `HUSI${randomId}.json`;
      case 'karing':
        return `KARING${randomId}.json`;
      default:
        return `WARP${randomId}.conf`;
    }
  }
}

// Главная функция обработчик для POST запросов
export async function onRequestPost(context) {
  const corsHeaders = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Methods': 'POST, OPTIONS',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Content-Type': 'application/json',
  };

  try {
    const { request } = context;
    const body = await request.json();
    const { 
      selectedServices, 
      siteMode, 
      deviceType, 
      endpoint,
      configFormat = 'wireguard',
      captchaToken
    } = body;

    // === Проверка hCaptcha ===
    if (!captchaToken) {
      return new Response(JSON.stringify({ success: false, message: "Captcha не пройдена." }), {
        status: 400,
        headers: corsHeaders
      });
    }

    const verifyResp = await fetch("https://hcaptcha.com/siteverify", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: `secret=${env.HCAPTCHA_SECRET_KEY}&response=${captchaToken}`,
    });

    const verifyData = await verifyResp.json();

    if (!verifyData.success) {
      return new Response(JSON.stringify({ success: false, message: "Неверная капча." }), {
        status: 400,
        headers: corsHeaders
      });
    }
    // =========================

    console.log('Enhanced WARP API Request received:', { 
      selectedServices, 
      siteMode, 
      deviceType, 
      endpoint, 
      configFormat,
      captchaSuccess: verifyData.success
    });

    const warpService = new EnhancedWarpService();
    const content = await warpService.generateConfig({
      selectedServices: selectedServices || [],
      siteMode: siteMode || 'all', 
      deviceType: deviceType || 'computer',
      endpoint: endpoint || '162.159.195.1:500',
      configFormat: configFormat
    });
    
    return new Response(
      JSON.stringify({ success: true, content }),
      { headers: corsHeaders }
    );
  } catch (error) {
    console.error('Enhanced WARP API Error:', error);
    return new Response(
      JSON.stringify({ 
        success: false, 
        message: `Ошибка: ${error.message}` 
      }),
      { 
        status: 500,
        headers: corsHeaders
      }
    );
  }
}

// Обработчик для GET запросов (информация о форматах)
export async function onRequestGet(context) {
  const corsHeaders = {
    'Access-Control-Allow-Origin': '*',
    'Content-Type': 'application/json',
  };

  const supportedFormats = [
    'wireguard', 'throne', 'clash', 'nekoray', 'husi', 'karing'
  ];

  return new Response(
    JSON.stringify({
      success: true,
      data: {
        supportedFormats,
        formatDetails: {
          wireguard: { name: 'WireGuard', extension: 'conf', supportsQR: true },
          throne: { name: 'Throne', extension: 'txt', supportsQR: true },
          clash: { name: 'Clash', extension: 'yaml', supportsQR: false },
          nekoray: { name: 'NekoRay/Exclave', extension: 'json', supportsQR: false },
          husi: { name: 'Husi', extension: 'json', supportsQR: false },
          karing: { name: 'Karing/Hiddify', extension: 'json', supportsQR: false }
        }
      }
    }),
    { headers: corsHeaders }
  );
}

export async function onRequestOptions() {
  return new Response(null, {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
    },
  });
}